(function(){var e=Object.prototype.hasOwnProperty,t=function(t,n){function i(){this.constructor=t}for(var r in n)e.call(n,r)&&(t[r]=n[r]);return i.prototype=n.prototype,t.prototype=new i,t.__super__=n.prototype,t};define(["require","jquery","underscore","backbone","app","core/mixins","map.jquery"],function(e){var n,r,i,s,o,u,a,f,l;return n=e("jquery"),l=e("underscore"),r=e("backbone"),u=e("app"),f=e("core/mixins"),e("map.jquery"),a={},i=function(e){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,e),r.prototype.initialize=function(){var e,t,r,i,s,o,f=this;return window.d=this,this.listenTo(u,"error",this.onError),this.mapData==null&&(this.mapData={type:this.type}),{mapType:"roadmap",zoom:(e=this.options.zoom)!=null?e:16,geojson:(t=(r=this.options.geojson)!=null?r:(i=this.model)!=null?i.get("geojson"):void 0)!=null?t:{},width:(s=this.options.width)!=null?s:"100%",height:(o=this.options.height)!=null?o:"100%"},a[this.type]!=null?(this.mapElement=a[this.type],this.loaded=!0):(this.mapElement=n("<div>"),this.loaded=!1),this.mapElement.on("initialized",function(){return typeof f.handleMapEvents=="function"&&f.handleMapEvents(),f.trigger("initialize")}),this.render(),window.pm=this},r.prototype.render=function(){var e=this;return this.mapElement.detach(),this.$el.html('<div class="loading">'+i18n("Loading...")+"</div>"),this.mapElement.one("initialized",function(t){e.mapElement.fadeTo(0,0),e.$el.empty().css({height:"100%"}).append(e.mapElement),e.center().fadeTo(100,1),a[e.type]=e.mapElement,e.loaded=!0;if(e.mode!=null)return e.setMode(e.mode)}),this.loaded?(this.$el.empty().css({height:"100%"}).append(this.mapElement),this.load(this.model)):this.mapElement.komooMap(this.mapData),this},r.prototype.onError=function(e){if(!this.loaded&&e.message.indexOf(!1))return this.$el.html('<div class="loading">'+i18n("Map unavailable!")+"</div>")},r.prototype.onOpen=function(){return this.refresh()},r.prototype.remove=function(){return this.mapElement.detach().unbind(),this.mapElement.komooMap("clear"),this.stopListening(),r.__super__.remove.apply(this,arguments)},r.prototype.refresh=function(){return this.mapElement.komooMap("refresh")},r.prototype.center=function(){var e;return e=this.getMap(),this.refresh(),this.mapElement.komooMap("center")},r.prototype.load=function(e){var t=this;this.model=e;if(this.model==null)return;return this.mapElement.one("features_loaded",function(e){return t.center()}),this.mapElement.komooMap("geojson",this.model.get("geojson"))},r.prototype.clear=function(){var e;return(e=this.getMap())!=null?e.clear():void 0},r.prototype.getMap=function(){return this.mapElement.data("map")},r}(r.View),o=function(e){function n(){n.__super__.constructor.apply(this,arguments)}return t(n,e),l.extend(n.prototype,f.EditOverlayMixin),n.prototype.type="preview",n.prototype.events={"click .overlay > .edit":"edit"},n.prototype.initialize=function(){var e,t,r,i;return this.overlayText=(e=this.options.overlayText)!=null?e:i18n("Edit"),this.listenTo(this.model,"change",this._reloadModel),this.mapData={type:this.type,mapType:"roadmap",zoom:(t=this.options.zoom)!=null?t:16,geojson:this.model.get("geojson"),width:(r=this.options.width)!=null?r:"100%",height:(i=this.options.height)!=null?i:"100%"},n.__super__.initialize.apply(this,arguments)},n.prototype._reloadModel=function(){return this.clear(),this.load(this.model)},n.prototype.load=function(){return this.clear(),n.__super__.load.apply(this,arguments)},n.prototype.edit=function(e){return e.preventDefault(),u.editGeometry(this.model)},n}(i),s=function(e){function n(){n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.type="main",n.prototype.initialize=function(){var e,t,r,i,s,o;return this.mapData={type:this.type,mapType:"roadmap",zoom:(e=this.options.zoom)!=null?e:16,geojson:(t=(r=this.options.geojson)!=null?r:(i=this.model)!=null?i.get("geojson"):void 0)!=null?t:{},width:(s=this.options.width)!=null?s:"100%",height:(o=this.options.height)!=null?o:"100%"},n.__super__.initialize.apply(this,arguments)},n.prototype.handleMapEvents=function(){var e,t=this;return e=this.getMap(),e.subscribe("drawing_finished",function(e,n){return n?t._onSave(e):t._onCancel(e)})},n.prototype._onCancel=function(e){return this.trigger("cancel")},n.prototype._onSave=function(e){return this.trigger("save",e.getGeoJson())},n.prototype.edit=function(e){return e!=null&&this.load(e),this.getMap().editFeature()},n}(i),{Preview:o,Editor:s}})}).call(this);