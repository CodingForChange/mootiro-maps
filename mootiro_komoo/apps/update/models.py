#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import unicode_literals  # unicode by default

from django.contrib.gis.db import models
from django.db.models.signals import post_save
from django.dispatch import receiver

from community.models import Community
# from need.models import Need
# from proposal.models import Proposal
# from organization.models import Organization
# from komoo_resource.models import Resource
# from investment.models import Investment


class Update(models.Model):
    """An update generated by users interaction"""

    title = models.CharField(max_length=256, null=False)
    user = models.CharField(max_length=256, null=False)
    date = models.DateTimeField(auto_now=True)

    TYPES = (
        ("A", "add"),
        ("E", "edit"),
        ("D", "discussion"),
    )
    typ = models.CharField(max_length=1, null=False, choices=TYPES, db_index=True)
    object_type = models.CharField(max_length=32, null=False, db_index=True)

    # def __unicode__(self):
    #     return unicode(self.title)

    @property
    def name(self):
        return self.title


# @receiver(post_save, sender=Need)
# @receiver(post_save, sender=Organization)
# @receiver(post_save, sender=Resource)
# @receiver(post_save, sender=Investment)
@receiver(post_save, sender=Community, dispatch_uid="log_update")
def log_update(sender, **kwargs):
    created = kwargs["created"]
    instance = kwargs["instance"]

    if created and hasattr(instance, 'creator') and instance.creator:
        data = {
            'title': instance.name,
            'user': instance.creator.username,
            'date': instance.creation_date,
            'typ': Update.TYPES[0][0],
            'object_type': instance._meta.verbose_name,
        }
        update = Update(**data)
        update.save()
    else:
        pass
